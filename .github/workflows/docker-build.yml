name: Docker Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ltx-video-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Generate version tags
        id: tags
        run: |
          # Get current date in YYYYMMDD format
          DATE_TAG=$(date +'%Y%m%d')
          # Get short SHA
          SHA_TAG=$(echo ${{ github.sha }} | cut -c1-7)
          # Load version prefix from .env
          VERSION_PREFIX=$(grep VERSION_PREFIX .env | cut -d '=' -f2)
          # Create tag list
          TAGS="${{ secrets.DOCKERHUB_USERNAME }}/ltx-video-api:latest,${{ secrets.DOCKERHUB_USERNAME }}/ltx-video-api:${VERSION_PREFIX}${DATE_TAG},${{ secrets.DOCKERHUB_USERNAME }}/ltx-video-api:${VERSION_PREFIX}${SHA_TAG}"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Build and push LTX Video API Docker image
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          platforms: linux/amd64

      # Move cache to prevent cache growth
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
